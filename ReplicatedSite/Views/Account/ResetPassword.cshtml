@model ReplicatedSite.ViewModels.ResetPasswordViewModel
@{
    ViewBag.Title = Resources.Common.ResetPassword;
}


<div id="view-sitelogin" class="container site-login">
    @if (!Model.IsExpiredLink)
    {
        <div class="row">
            <div class="col-xs-12">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-xs-12 bottom-border">
                            <h3>@Resources.Common.ResetPassword</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="ll-well">
            <div class="container-fluid">
                <div>
                    <div class="reset-password-form-container" id="resetPasswordContainer">
                        @using (Ajax.BeginForm("ResetPassword", "account", new AjaxOptions() { HttpMethod = "Post", InsertionMode = InsertionMode.Replace, OnSuccess = "resetModule.login" }))
                        {
                            <div class="form-horizontal">
                                @Html.AntiForgeryToken()
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.HiddenFor(u => u.CustomerType)
                                    @Html.HiddenFor(u => u.CustomerID)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-sm-4">
                                        @Html.PasswordFor(model => model.Password, new
                               {
                                   @class = "form-control",
                                   placeholder = "New Password"
                               })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-sm-4">
                                        @Html.PasswordFor(model => model.ConfirmPassword, new
                               {
                                   @class = "form-control",
                                   placeholder = "Confirm Password"
                               })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button type="submit" id="resetPasswordBtn" class="btn login">@Resources.Common.ResetPassword</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <h3>@Resources.Common.ResetPassword</h3>
        <div class="space-20"></div>
        <p>Your link has expired, you will need to have a <a class="" title="Go back to forgot password" href="@Url.Action("forgotpassword")">new link</a> sent.</p>
        <p>If you feel you have reached this page by mistake, please contact customer support for assistance.</p>
    <div class="space-20"></div>
    }
</div>
<script>
    var resetModule = {};
    require(["jquery", "toastr"], function ($, toastr) {
        resetModule.login = function(response) {
            if (response.success) {

                window.location = response.url;
            } else {
                console.log(response);
                toastr.error(response.message);
            }
        }
    });
</script>