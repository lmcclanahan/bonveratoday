@model PaymentMethodsViewModel
@{
    var title = Resources.Common.Payment;
    if (Model.IsAutoOrder)
    {
        title = "Auto Order Payment";
    }

    ViewBag.Title = title;

    var controller = ViewContext.RouteData.Values["controller"].ToString();
    var contextID = new Guid();
}



<div id="view-orderpayment" class="container shipping-payment">
    <h2 class="page-header">@title</h2>
    <p>@ViewBag.Error</p>
    <h3>@Resources.Common.SelectPaymentMethod</h3>


    @*@if (!Model.IsAutoOrder)
    {
        if (Model.HasAutoOrderItems)
        {
            <div class="input-group row margin-0">
                <div class="col-xs-1 margin-2">
                    <input type="checkbox" id="UsePaymentForAutoOrders" value="true" checked />
                </div>
                <div class="col-xs-11 margin-2">
                    <label class="control-label">@Resources.Common.UseThisPaymentMethodForReplenish</label>
                </div>
            </div>
        }
    }*@

    @if (Model.PaymentMethods != null && Model.PaymentMethods.Count() > 0)
    {
       
        <div class="table-responsive">
            <table class="table table-hover">
                <thead style="background-color: #EEECDF">
                    <tr>
                        <th colspan="2">@Resources.Common.YourPaymentMethods</th>
                        <th>@Resources.Common.Name</th>
                        <th class="text-right" style="width: 100px;">@Resources.Common.Expires</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var method in Model.PaymentMethods)
                    {
                        if (method is CreditCard)
                        {
                            var card = method as CreditCard;

                            <tr id="card-@contextID">
                                <td style="width: 180px;">
                                    @using (Ajax.BeginForm("UseCreditCardOnFile", controller, new AjaxOptions()
                                    {
                                        OnSuccess = "paymentoverview.onSuccess",
                                        //OnBegin = "paymentoverview.onBegin"
                                    }, new { validate = "validate" }))
                                    {
                                        <input type="hidden" name="Type" value="@card.Type" />
                                        <input type="hidden" name="UsePaymentForAutoOrders" value="true" />

    <button type="submit" class="btn btn-primary">@Resources.Common.PayWithThisCard</button>

                                    }
                                </td>
                                <td>@Resources.Common.CardEndingIn @card.CardNumber</td>
                                <td>@card.NameOnCard</td>
                                <td class="@((card.IsExpired) ? "text-danger" : "") text-right">
                                    @card.ExpirationDate.ToString("M/yyyy")

                                    @if (card.IsExpired)
                                    {
                                        <text><br />@Resources.Common.Expired</text>
                                    }
                                </td>
                            </tr>
                        }

                    }
                </tbody>

            </table>
        </div>
        if (Model.PaymentMethods.Where(c => c is CreditCard).Count() == 2)
        {

            <div class="alert alert-success alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <strong>
                    You have 2 credit cards on file. Therefore no additional cards will be saved. In order to modify current cards please go to your account settings page.
                </strong>
            </div>
        }
        <div class="space-100"></div>
    }


    @if (Model.PaymentMethods != null && Model.PaymentMethods.Count() > 0)
    {
        <h3>@Resources.Common.MorePaymentOptions</h3>
    }

    <hr />
    <div class="row">
        <div class="col-sm-9">
            <h4>@Resources.Common.CreditDebitCards</h4>

            <p><a data-toggle="#newcardcontainer" class="btn btn-link"><i class="fa-plus"></i> @Resources.Common.AddCard</a></p>

            <div id="newcardcontainer" style="display: none;">
                @{ var NewCard = new CreditCard(); }
                @using (Ajax.BeginForm("UseCreditCard", controller, new AjaxOptions()
                {
                    OnSuccess = "paymentoverview.onSuccess",
                    OnFailure = "paymentoverview.onFailure"
                }, new { novalidate = "novalidate" }))
                {
                    <input type="hidden" name="UsePaymentForAutoOrders" value="true" />
                    @Html.AntiForgeryToken()

                    <div class="well">
                        <div class="row margin-5">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(c => NewCard.NameOnCard)
                                    @Html.TextBoxFor(c => NewCard.NameOnCard,
                                    htmlAttributes: new
                                    {
                                        @class = "form-control",
                                        placeholder = "Name On Card"
                                    })
                                    @Html.ValidationMessageFor(c => NewCard.NameOnCard, String.Empty,
                                     new
                                     {
                                         @style = "color:red; font-size:small;"
                                     })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(c => NewCard.CardNumber)
                                    @Html.TextBoxFor(c => NewCard.CardNumber,
                                    htmlAttributes: new
                                    {
                                        @class = "form-control",
                                        placeholder = "Card Number"
                                    })
                                    @Html.ValidationMessageFor(c => NewCard.CardNumber, String.Empty,
                                     new
                                     {
                                         @style = "color:red; font-size:small;"
                                     })
                                </div>
                            </div>
                        </div>
                        <div class="row margin-5">
                            <div class="col-sm-10">
                                <div class="form-group">
                                    <label for="NewCard.Expiration" class="control-label">@Resources.Common.ExpirationDate</label>
                                    <div class="row margin-5">
                                        <div class="col-sm-7">
                                            @Html.DropDownList("NewCard.ExpirationMonth", Html.Months(), new
                                        {
                                            @class = "form-control"
                                        })
                                        </div>
                                        <div class="col-sm-5">
                                            @Html.DropDownList("NewCard.ExpirationYear", Html.ExpirationYears(), new
                                        {
                                            @class = "form-control"
                                        })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    @Html.LabelFor(c => NewCard.CVV)
                                    @Html.TextBoxFor(c => NewCard.CVV,
                                    htmlAttributes: new
                                    {
                                        @class = "form-control",
                                        placeholder = "CVV"
                                    })
                                    @Html.ValidationMessageFor(c => NewCard.CVV, String.Empty,
                                     new
                                     {
                                         @style = "color:red; font-size:small;"
                                     })
                                </div>
                            </div>
                        </div>

                        <div class="checkbox billingsameasshipping">
                            <label>
                                <input type="checkbox" name="BillingSameAsShipping" value="true" checked /> @Resources.Common.BillingAddressSameAsShipping
                                <input type="hidden" value="false" name="BillingSameAsShipping" />
                            </label>
                        </div>

                        @Html.EditorFor(c => NewCard.BillingAddress)

                    </div>

    <button type="submit" class="btn btn-primary" data-button-type="addnew">@Resources.Common.PayWithThisCard</button>


                }
            </div>
            <div class="space-15"></div>
        </div>
        <div class="col-sm-3">
            <div class="text-right">
                <h5>Accepted Credit Cards</h5>
                <p style="font-size: 25px">
                    <i class="fa-cc-amex"></i> <i class="fa-cc-visa"></i> <i class="fa-cc-mastercard"></i> <i class="fa-cc-discover"></i>
                </p>
            </div>
        </div>
    </div>

</div>





@section scripts
{
    <script>
        var paymentoverview;

        require(["jquery", "app", "forms", "pubsub"], function ($, app, forms) {
            paymentoverview = (function () {

                // Settings
                var context = "#view-orderpayment",
                    $context = $(context);


                // Event Handlers
                function registerEventHandlers() {
                    $('[data-toggle]', $context).on('click', function () {
                        var $target = $($(this).data('toggle'));
                        var id = $(this).data('toggle').replace("#","");
                        $target.slideToggle('fast', function () { document.getElementById(id).scrollIntoView() });
                    });

                    $('input:checkbox[name="BillingSameAsShipping"]').on('change', function () {
                        var $this = $(this),
                            $target = $this.parents('.billingsameasshipping').siblings('.view-address'),
                            checked = $this.is(':checked')

                        if (checked) {
                            $target.slideUp('fast');
                        }
                        else {
                            $target.slideDown('fast');
                        }
                    });

                    $('input:checkbox[name="BillingSameAsShipping"]').each(function () {
                        $(this).triggerHandler('change');
                    });

                    $("#UsePaymentForAutoOrders").on("change", function () {
                        var ischecked = $(this).is(":checked");

                        $("[name='UsePaymentForAutoOrders']").each(function () {
                            $(this).val(ischecked);
                        });
                    });

                    $("[data-role='Zip'").focusout(function () {
                        if (!validateUSZip()) {
                            return false;
                        }
                    });
                    $("[data-button-type='addnew']").click(function () {
                        if (!validateUSZip()) {
                            return false;
                        }
                    });
                }


                // Actions
                var actions = {
                    onSuccess: function (response) {
                        if (response.success) {
                            window.location = '@Url.Action("checkout", "shopping")';

                        } else {
                            app.throwError(response.message);
                        }
                    },
                    onFailure: function (xhr) {
                        console.log("use payment method failed", xhr);
                    }
                };


                // Initialization
                function init() {
                    registerEventHandlers();
                }
                init();

                return {
                    onSuccess: actions.onSuccess,
                    onFailure: actions.onFailure
                }

            })();
        });
    </script>
}