@model TreeViewerViewModel



@{
    //var ranks = Model.Ranks.ToArray();
}
@section styles
{
    <link href="~/Content/scripts/vendor/jorgchart/jquery.jOrgChart.css" rel="stylesheet" />
}
<div id="view-tree-viewer">
    <div class="row">
        <div class="col-sm-8 tree">

            <!-- Customer Details -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Customer Details</h3>
                </div>
                <div class="panel-body">
                    <div id="customer-details-container">
                        Loading...
                    </div>
                </div>
            </div>

            <!-- Tree -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        Tree Viewer
                    </h3>
                </div>
                <div class="panel-body">
                    <a class="btn btn-primary" data-role="uplevel">Up One Level</a>
                    <a class="btn btn-primary pull-right" data-role="treetop">Back to Top</a>
                    <div class="clearfix"></div>
                </div>
                <div class="panel-body">
                    <div id="view-binary-viewer" style="width: 100%; height: 415px; overflow: auto;">
                        Loading...
                    </div>
                </div>
            </div>

            <!-- Key -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Key</h3>
                </div>
                <div class="panel-body">
                    <div class="row margin-10">
                        <div class="col-sm-4">
                            <div class="row margin-10">
                                <div class="col-sm-2">
                                    <span class="key-item icon fa-plus-circle"></span>
                                </div>
                                <div class="col-sm-10">
                                    Open Position
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row margin-10">
                                <div class="col-sm-2">
                                    <span class="key-item icon fa-repeat"></span>
                                </div>
                                <div class="col-sm-10">
                                    @Resources.Common.HasReplenish
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="row margin-10">
                                <div class="col-sm-2">
                                    <span class="key-item icon fa-heart"></span>
                                </div>
                                <div class="col-sm-10">
                                    Personally Enrolled
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="space-40"></div>
                    <div class="row">
                        <h4>North America</h4>
                        @foreach (var rank in Model.Ranks.Where(r => r.RankID == 0))
                        {

                            <div class="col-sm-4">
                                <div class="legend">
                                    <div class="legend-item">
                                        <div class="legend-object"><span class="key-item rank-@(rank.RankID)"></span></div>
                                        <div class="legend-body">@rank.RankDescription @*@rank.RankID*@</div>
                                    </div>
                                </div>
                            </div>
                        }
                        @foreach (var rank in Model.Ranks.Where(r => r.RankID > 10))
                        {

                            <div class="col-sm-4">
                                <div class="legend">
                                    <div class="legend-item">
                                        <div class="legend-object"><span class="key-item rank-@(rank.RankID)"></span></div>
                                        <div class="legend-body">@rank.RankDescription @*@rank.RankID*@</div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <hr />

                    <div class="row">
                        <h4>Europe</h4>
                        @foreach (var rank in Model.Ranks.Where(r => r.RankID <= 10))
                        {

                            <div class="col-sm-4">
                                <div class="legend">
                                    <div class="legend-item">
                                        <div class="legend-object"><span class="key-item rank-@(rank.RankID)"></span></div>
                                        <div class="legend-body">@rank.RankDescription @*@rank.RankID*@</div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

        </div>
        <div class="col-sm-4 upline-viewer">

            <!-- Upline Viewer -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Upline Viewer</h3>
                </div>
                <div id="upline-container">
                    Loading...
                </div>
            </div>


            <!-- Search -->
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title">Search</h3>
                </div>
                <div class="panel-body">
                    <div class="input-group">
                        <input type="text" class="form-control" id="search-field" style="height:36px;">
                        <a class="input-group-addon btn btn-primary" data-role="search"><span class="fa-search"></span></a>
                    </div>
                </div>


                <div id="search-results-container">
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>ID#</th>
                                        <th>First</th>
                                        <th>Last</th>
                                    </tr>
                                </thead>
                                <tbody id="search-results"></tbody>
                            </table>
                            <script id="search-results-template" data-target="#search-results" type="text/x-handlebars-template">
                                {{#each results}}
                                <tr data-id="{{CustomerID}}">
                                    <td>{{CustomerID}}</td>
                                    <td>{{FirstName}}</td>
                                    <td>{{LastName}}</td>
                                </tr>
                                {{/each}}
                            </script>
                        </div>
                    </div>
                </div>

            </div>

           
            @if ((int)System.DateTime.Now.Day > 7)
            {
            <!-- Waitning Room -->

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Make a Placement</h3>
                    </div>
                    <div class="panel-body">
                        <div id="waiting-room-container">
                            Loading...
                        </div>

                        <h4>Directions for Making a Placement</h4>
                        <ul class="placement-directions list-unstyled">
                            <li>
                                <strong>Step 1 - </strong>Choose the person you would like your new member to be placed under.
                                Use the Search bar above to easily find that member by Name or ID Number.
                                Click on his/her name so they appear in the Tree Viewer. They must appear in
                                the Tree Viewer so they can then be chosen as the Placement Sponsor.
                            </li>
                            <li>
                                <strong>Step 2 – </strong>Click on the new Member above that you wish to place. (if you click
                                on the member again it will deselect them)
                            </li>
                            <li>
                                <strong>Step 3 – </strong>Click on the new Placement Sponsor in the Tree Viewer, whom you wish
                                to place the new Member under.
                            </li>
                            <li>
                                <strong>Step 4 – </strong>A pop-up will appear to confirm placement.  Click OK.
                            </li>
                            <li>
                                <strong>Step 5 - </strong>Your placement has been completed.
                            </li>
                        </ul>

                    </div>
                </div>
            }
            else
            {
                <p>Member placements are not allowed during the first week of a calendar month.</p>
            }
        </div>
    </div>
</div>

@section scripts
{

    <script>
        require(["jquery", "ajax", "app", "toastr", "handlebars", "trees", "jquery-scrollto", "extensions"], function ($, ajax, app, toastr, Handlebars) {

            // Settings
            var context             = "#view-binary-viewer",
                $context            = $(context),
                mousemoveLocked     = false,
                topCustomerID       = @Identity.Current.CustomerID,
                topCustomerID       = @Identity.Current.CustomerID;



            // State
            var state = {
                selectedCustomerId: 0,
                selectedWaitingRoomId: 0
            };



            // Event Handlers
            function registerEventHandlers() {
                $('.jOrgChart').on('click', '.node-body', function () {
                    actions.scrollToNode($(this));
                });

                // Tree top
                $('[data-role="treetop"]').on('click', function () {
                    actions.fetchTree();
                });

                $('body').on('click', '.waitingroomnode', function() {
                    var $this = $(this),
                    isSelected = $this.hasClass('activerow'),
                    $list = $('#waiting-room-container tbody tr');

                    state.selectedWaitingRoomId = $this.data('waitingroomid');
                    $list.removeClass('activerow');
                    if(isSelected){
                        $this.removeClass('activerow');
                        state.selectedWaitingRoomId = 0;
                    }
                    else {
                        $this.addClass('activerow');
                    }
                    console.log("state.selectedWaitingRoomId: ", state.selectedWaitingRoomId);
                });

                // Up one level
                $('[data-role="uplevel"]').on('click', function () {
                    if (state.selectedCustomerId == topCustomerID) { return; }
                    actions.upOneLevel(state.selectedCustomerId);
                });

                // Search and Upline row click
                $('#view-tree-viewer').on('click', '[data-id]', function () {
                    var id = $(this).data("id"),
                    isPlacingWaitingRoomCustomer = (state.selectedWaitingRoomId != 0) ? true : false;

                    if(!isPlacingWaitingRoomCustomer){
                        actions.fetchTree(id);
                    }
                });

                // Search when Enter is pressed
                $('#search-field').on("keypress", function (e) {
                    if (e.which == 13) {
                        e.preventDefault();
                        $('[data-role="search"]').click();
                    }
                });
                $(window).bind('expanded.app.container', function(){

                    $('.upline-viewer').hide();
                    $('.tree').removeClass('col-sm-8');
                });
                $(window).bind('compress.app.container',function(){
                    $('.upline-viewer').show();
                    $('.tree').addClass('col-sm-8');
                });
               
                // Search
                $('[data-role="search"]').on('click', function () {
                    var query = $('#search-field').val();

                    if (query != "") {
                        actions.search(query);
                    }
                    else {
                        $('#search-field').focus();
                    }
                });


                // Handle click for tree nodes
                $context.on('click', '.node', function () {
                    var $this = $(this),
                        id = $this.data('id'),
                        isPlacingWaitingRoomCustomer = (state.selectedWaitingRoomId != 0) ? true : false,
                        sponsorID = $this.data('id');



                    if (isPlacingWaitingRoomCustomer) {
                        var confirmed = confirm("Are you sure you would like to place customer ID# {0} underneath customer ID# {1}?".format(state.selectedWaitingRoomId.toString(), sponsorID.toString()));

                        if(confirmed) {
                            ajax.json({
                                url: '@Url.Action("placewaitingroomcustomernode", "organization")',
                                data: {
                                    id: state.selectedWaitingRoomId,
                                    sponsorid: sponsorID
                                },
                                success: function (response) {
                                    if(response.success){
                                        toastr.success("<strong>Success!</strong><br /><p>{0}</p>".format(response.message));
                                        setTimeout(function () {
                                            window.location = window.location
                                        }, 1000);
                                    }
                                    else {
                                        toastr.error("<strong>Error:</strong><br /><p>{0}</p>".format(response.message));
                                    }
                                },
                                error: function(xhr) {
                                    toastr.error("<strong>Customer could not be placed.</strong>");
                                }
                            });
                        }
                        else {
                            console.log("chose not to place customer.");
                            return;
                        }
                    }
                    else {
                        $this.find('.node-body').first().html('<div class="text-center"><img src="@Url.Content("~/Content/images/circle-white-24.gif")" style="position: relative; top: 18px;" /></div>');
                        actions.fetchTree(id);
                    }
                });
            }


            // Actions
            var actions = {
                fetchTree: function (id) {
                    var nodeId = id || 0;

                    $.ajax({
                        url: '@Url.Action("fetchUnilevelTree", "organization", new {id = 0})'.slice(0, -1) + nodeId,
                        type: 'GET',
                        cache: false,
                        success: function (response) {

                            $context.html(response.treehtml);
                            $('#customer-details-container').html(response.customerdetailshtml);
                            $('#upline-container').html(response.uplinehtml);
                            $('#waiting-room-container').html(response.waitingroomlisthtml);
                            actions.scrollToNode($('.jOrgChart .node:first'));
                            state.selectedCustomerId = response.id;
                        },
                        error: function(xhr) {
                            console.log(xhr.responseText);
                        }
                    });
                },
                search: function (query) {
                    ajax.json({
                        url: "@Url.Action("search", "organization")",
                        data: { query: query },
                        beforeSend: function () {
                            var loadingimg = "<tr><td colspan='3'><div class='text-center'><img src=@Url.Content("~/Content/images/circle-24.gif") /></div></td></tr>";
                            $("#search-results").html(loadingimg);
                        },
                        success: function (response) {
                            if (response.success) {

                                if (response.results.length == 0) {
                                    $("#search-results-container").hide();
                                    $("#search-field").val("");
                                    app.throwError("This search returned no results.");
                                    return;
                                }

                                var source = $("#search-results-template").html();
                                var template = Handlebars.compile(source);
                                var html = template(response);
                                $("#search-results").html(html);

                                if(!$("#search-results-container").is(":visible")){
                                    $("#search-results-container").show();
                                }
                            }
                            else {
                                console.log("message", response.message);
                                $("#search-results-container").hide();
                                app.throwError("This search returned no results.");
                            }
                        }
                    });
                },
                upOneLevel: function(id){
                    var nodeId = id || 0;

                    $.ajax({
                        url: '@Url.Action("uponelevel", "organization", new { id = 0 })'.slice(0, -1) + nodeId,
                        type: 'GET',
                        cache: false,
                        success: function (response) {
                            if (response.success) {
                                actions.fetchTree(response.parentId);
                            }
                            else {
                                console.log(response.message);
                            }
                        },
                    });
                },
                scrollToNode: function ($element, lockMouseMove) {
                    lockMouseMove = lockMouseMove || false;

                    if (lockMouseMove) mousemoveLocked = true;

                    if ($element.length == 0) return;

                    $context.stop().scrollTo($element, 500, {
                        offset: function () { return { top: 0, left: ($element.width() / 2) - ($context.width() / 2) }; },
                        onAfter: function () {
                            if (lockMouseMove) {
                                setTimeout(function () {
                                    mousemoveLocked = false;
                                }, 1000);
                            }
                        }
                    });
                }

            };


            // Initialization
            function init() {
                registerEventHandlers();
                actions.fetchTree();
            }
            init();

        });
    </script>
}
