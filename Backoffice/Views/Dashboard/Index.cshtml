@using System
@using System.Linq
@model DashboardViewModel
@{
    ViewBag.Title = Resources.Common.Dashboard;
    var newestDistributorsStyle = (GlobalSettings.Globalization.HideForLive) ?  "col-md-offset-4" : "col-md-offset-0";
}
<style>
    #site-content {
        background-color: #faf9f7;
    }
</style>
<div id="view-dashboard">
    <div class="row margin-20">
        <!-- COMMISSIONS -->
        <div class="col-sm-6 col-md-4">
            <div class="card card-default card-metrics" data-scroll-reveal="enter bottom">
                <div class="card-heading">
                    <h3 class="card-title">
                        @(Resources.Common.YourCurrentEarnings.FormatWith(DateTime.Now.ToString("MMMM")))
                        <i class="fa-question-circle" data-toggle="popover" data-container="body" data-title="Earnings" data-trigger="hover" data-placement="top" data-content="The commission amount shown for current month is an estimate and subject to change based on close of month, qualification and it has not been paid out. Pay out for current month is always in the following month"></i>
                    </h3>
                </div>
                <div class="card-body">
                    @if (Model.CurrentCommissions != null)
                    {
                        if (Model.CurrentCommissions.Count > 0)
                        {
                            <div class="text-center">
                                <small class="text-muted text-uppercase">@Resources.Common.CurrentRank</small>
                                <div class="lead">@Model.CurrentCommissions.First().PaidRank.RankDescription</div>
                            </div>

                            <hr />

                            foreach (var commission in Model.CurrentCommissions)
                            {
                                <dl class="card-metric dl-metric ">
                                    <dt>@commission.Period.PeriodDescription</dt>
                                    <dd>@commission.Total.ToString("C")</dd>
                                </dl>
                            }
                        }
                    }
                    else
                    {
                        <p>This card failed to load properly. Please try again later.</p>
                    }
                </div>
                <a href="@Url.Action("commissiondetail", "commissions")" class="card-footer block text-right">
                    @Resources.Common.ViewCurrentEarnings <i class="fa-chevron-right"></i>
                </a>
            </div>
        </div>
        <!--END PROMOTION STATUS -->
        <div class="col-sm-6 col-md-4">
            <div class="card card-default card-ajax" id="view-rankadvancementcard" data-scroll-reveal="enter bottom">
                <div class="card-heading">
                    <h3 class="card-title">
                        @Resources.Common.YourPromotionStatus
                    </h3>
                </div>
                <div class="card-body" id="RankAdvancementBody">
                    <div class="space-70 hidden-xs"></div>
                    <div class="text-center">
                        <img src="~/Content/images/loading/circle-64.GIF" />
                        <div class="space-10"></div>
                        @Resources.Common.Calculating<br />
                        <small class="text-muted ajax-status"></small>
                    </div>
                </div>
                <a href="@Url.Action("rank", "commissions")" class="card-footer block text-right">
                    @Resources.Common.ViewPromotionDetails <i class="fa-chevron-right"></i>
                </a>
            </div>
        </div>
        <!-- METRICS -->
        <div class="col-sm-6 col-md-4">
            <div class="card card-default card-metrics" data-scroll-reveal="enter bottom">
                <div class="card-heading">
                    <h3 class="card-title">
                        @Resources.Common.YourMetrics.FormatWith(DateTime.Now.ToString("MMMM"))
                    </h3>
                </div>
                <div class="card-body">
                    @if (Model.Volumes != null)
                    {
                        <dl class="dl-metric card-metric">
                            <dt>@CommonResources.Volumes(1)</dt>
                            <dd>@Format.Boolean(Model.Volumes.Volume1 == 1)</dd>
                        </dl>

                        <hr />

                        <dl class="dl-metric card-metric">
                            <dt>@CommonResources.Volumes(4)</dt>
                            <dd class="text-success">@Model.Volumes.Volume4.ToString("N0")</dd>
                        </dl>
                        <dl class="dl-metric card-metric">
                            <dt>@CommonResources.Volumes(16)</dt>
                            <dd class="text-success">@Model.Volumes.Volume16.ToString("N0")</dd>
                        </dl>
                        <dl class="dl-metric card-metric">
                            <dt>@CommonResources.Volumes(2)</dt>
                            <dd class="text-success">@Model.Volumes.Volume2.ToString("N0")</dd>
                        </dl>

                        <hr />

                        if (Model.Volumes.Volume50 > 0)
                        {
                            <dl class="dl-metric card-metric">
                                <dt>@CommonResources.Volumes(55)</dt>
                                <dd class="text-success">@Model.Volumes.Volume55.ToString("N0")</dd>
                            </dl>
                        }
                        if (Model.Volumes.Volume51 > 0)
                        {
                            <dl class="dl-metric card-metric">
                                <dt>@CommonResources.Volumes(56)</dt>
                                <dd class="text-success">@Model.Volumes.Volume56.ToString("N0")</dd>
                            </dl>
                        }
                        if (Model.Volumes.Volume52 > 0)
                        {
                            <dl class="dl-metric card-metric">
                                <dt>@CommonResources.Volumes(57)</dt>
                                <dd class="text-success">@Model.Volumes.Volume57.ToString("N0")</dd>
                            </dl>
                        }
                        if (Model.Volumes.Volume53 > 0)
                        {
                            <dl class="dl-metric card-metric">
                                <dt>@CommonResources.Volumes(58)</dt>
                                <dd class="text-success">@Model.Volumes.Volume58.ToString("N0")</dd>
                            </dl>
                        }
                        if (Model.Volumes.Volume54 > 0)
                        {
                            <dl class="dl-metric card-metric">
                                <dt>@CommonResources.Volumes(59)</dt>
                                <dd class="text-success">@Model.Volumes.Volume59.ToString("N0")</dd>
                            </dl>
                        }
                        if (Model.Volumes.Volume91 > 0)
                        {
                            <dl class="dl-metric card-metric">
                                <dt>@CommonResources.Volumes(91)</dt>
                                <dd class="text-success">@Model.Volumes.Volume91.ToString("N0")</dd>
                            </dl>
                        }

                    }
                    else
                    {
                        <p>This card failed to load properly. Please try again later.</p>
                    }
                </div>
                <a href="@Url.Action("volumelist", "commissions")" class="card-footer block text-right">
                    @Resources.Common.ViewAllVolumes <i class="fa-chevron-right"></i>
                </a>
            </div>
        </div>
        <!-- ORDERS -->
        @if (!GlobalSettings.Globalization.HideForLive)
        {
            <div class="col-sm-6 col-sm-6 col-md-offset-2 col-md-4">
                <div class="card card-default card-recentorders" data-scroll-reveal="enter bottom">
                    <div class="card-heading">
                        <h3 class="card-title">
                            @Resources.Common.YourRecentOrders
                        </h3>
                    </div>
                    <div class="card-body no-padding">
                        @if (Model.RecentOrders != null)
                        {
                            <ul class="list-group">
                                @foreach (var order in Model.RecentOrders)
                                {
                                    <li class="list-group-item">
                                        <a class="media block" href="@Url.Action("orderdetail", "orders", new {token = Security.Encrypt(order.OrderID, Identity.Current.CustomerID)})">
                                            <div class="pull-left">
                                                <i class="fa-shopping-cart media-object"></i>
                                            </div>
                                            <div class="media-body">
                                                <div class="row">
                                                    <div class="col-xs-10">
                                                        <h4 class="media-heading">@CommonResources.OrderStatuses(order.OrderStatusID)</h4>
                                                        <span class="text-muted">#@order.OrderID</span>
                                                    </div>
                                                    <div class="col-xs-2">
                                                        <div class="text-right">
                                                            <i class="fa-chevron-right"></i>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>This card failed to load properly. Please try again later.</p>
                        }
                    </div>
                    <a href="@Url.Action("orderlist", "orders")" class="card-footer block text-right">
                        @Resources.Common.ViewAllOrders <i class="fa-chevron-right"></i>
                    </a>
                </div>
            </div>
        }
        <!-- NEW DISTRIBUTORS -->
        <div class="col-sm-6 col-sm-offset-3 @newestDistributorsStyle col-md-4">
            <div class="card card-default card-media-grid" data-scroll-reveal="enter bottom">
                <div class="card-heading">
                    <h3 class="card-title">
                        @Resources.Common.YourNewestDistributors
                    </h3>
                </div>
                <div class="card-body">
                    @if (Model.NewestDistributors != null)
                    {
                        <div class="row margin-10 ">
                            <ul class="list-group">
                                <li class="list-group-item text-center newest-distributors-days"><b>PAST 7 DAYS</b></li>
                                @foreach (var distributor in Model.NewestDistributors.Where(c => c.CreatedDate >= DateTime.Now.AddDays(-7) && c.CreatedDate <= DateTime.Now))
                                {
                                    <li class="list-group newest-distributors-distributor">

                                        <a class="newest-distributors-profile" href="@Url.Action("index", "profile", new { token = Security.Encrypt(distributor.CustomerID, Identity.Current.CustomerID) })" data-profile="popover modal" data-id="@distributor.CustomerID" data-token="@Security.Encrypt(distributor.CustomerID, Identity.Current.CustomerID)" data-placement="top">
                                            @distributor.FirstName
                                            @distributor.LastName
                                        </a>

                                        <text class="pull-right">
                                            @distributor.CreatedDate.ToShortDateString()
                                        </text>

                                    </li>

                                }
                                <li class="list-group-item  text-center newest-distributors-days"><b>PAST 15 DAYS</b></li>
                                @foreach (var distributor in Model.NewestDistributors.Where(c => c.CreatedDate >= DateTime.Now.AddDays(-15) && c.CreatedDate <= DateTime.Now.AddDays(-7)))
                                {
                                    <li class="list-group newest-distributors-distributor">
                                        <a class="newest-distributors-profile" href="@Url.Action("index", "profile", new { token = Security.Encrypt(distributor.CustomerID, Identity.Current.CustomerID) })" data-profile="popover modal" data-id="@distributor.CustomerID" data-token="@Security.Encrypt(distributor.CustomerID, Identity.Current.CustomerID)" data-placement="top">
                                            @distributor.FirstName
                                            @distributor.LastName
                                        </a>
                                        <text class="pull-right">
                                            @distributor.CreatedDate.ToShortDateString()
                                        </text>
                                    </li>
                                }
                                <li class="list-group-item  text-center newest-distributors-days"><b>PAST 30 DAYS</b></li>
                                @foreach (var distributor in Model.NewestDistributors.Where(c => c.CreatedDate >= DateTime.Now.AddDays(-30) && c.CreatedDate <= DateTime.Now.AddDays(-15)))
                                {
                                    <li class="list-group newest-distributors-distributor">
                                        <a class="newest-distributors-profile" href="@Url.Action("index", "profile", new { token = Security.Encrypt(distributor.CustomerID, Identity.Current.CustomerID) })" data-profile="popover modal" data-id="@distributor.CustomerID" data-token="@Security.Encrypt(distributor.CustomerID, Identity.Current.CustomerID)" data-placement="top">
                                            @distributor.FirstName
                                            @distributor.LastName
                                        </a>
                                        <text class="pull-right">
                                            @distributor.CreatedDate.ToShortDateString()
                                        </text>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                    else
                    {
                        <p>This card failed to load properly. Please try again later.</p>
                    }
                </div>
                <a href="@Url.Action("newdistributorslist", "organization")" class="card-footer block text-right">
                    @Resources.Common.ViewNewestAssociates <i class="fa-chevron-right"></i>
                </a>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        require(["jquery", "ajax", "scrollreveal"], function ($, ajax, scrollReveal) {

            // Settings
            var context = "#view-dashboard",
                $context = $(context),
                currentRankID = @Model.Volumes.PayableAsRank.RankID;

            // Actions
            var actions = {
                getRankAdvancementCard: function () {
                    ajax.html({
                        url: Router.action("Dashboard", "GetRankAdvancementCard", { rankid: currentRankID }),
                        interval: 3000,
                        maxAttempts: 20,
                        success: function (response) {
                            $('#view-rankadvancementcard', $context).replaceWith(response);
                        },
                        repeat: function (attempts) {
                            if (attempts == 5) {
                                $('#view-rankadvancementcard .ajax-status', $context).html("@Resources.Common.CalculationTakingLonger");
                            }
                        },
                        fail: function () {
                            $('#view-rankadvancementcard .card-body', $context).html("@Resources.Common.RankAdvancementFailed");
                        }
                    });
                }
            };


            // Initialization
            function init() {
                if('@Model.Volumes' == null || '@Model.Volumes' == "")
                {
                    $("#RankAdvancementBody").text("This card failed to load properly. Please try again later.");
                }
                else
                {
                    actions.getRankAdvancementCard();
                }

                // ScrollReveal
                if($(window).width() > 767)
                {
                    window.scrollReveal = new scrollReveal();
                }
                else
                {
                    $(window).resize(function(){
                        if($(window).width() > 767)
                        {
                            window.scrollReveal = new scrollReveal();
                        }
                    });
                }
            }
            init();

        });
    </script>
}
